name: Terraform Workflow
on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      ENV:
        description: "Environment (dev, sit, uat, prd)"
        required: true
        type: choice
        options:
          - dev
          - sit
          - uat
          - prd
      REGION:
        description: "AWS Region"
        required: true
        type: choice
        options:
          - eu-west-1
          - eu-west-2
          - ap-southeast-2
      AUTH_AWS: # This Variable is only for testing purposes
        required: true
        type: choice
        default: "false"
        options: 
          - "true"
          - "false"

permissions:
  contents: write
  pull-requests: write

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.11.4" # Specify your preferred Terraform version

      - name: Configure AWS Credentials
        if: ${{ inputs.AUTH_AWS == 'true' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.REGION }} # Default region if not provided

      - name: Terraform Init
        run: make init ENV=${{ inputs.ENV }} REGION=${{ inputs.REGION }}

      - name: Terraform Plan
        run: make plan ENV=${{ inputs.ENV }} REGION=${{ inputs.REGION }} ARGS="-no-color -out tf.plan"

      # - name: Upload Plan Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: terraform-plan-${{ env.ENV }}-${{ env.REGION }}
      #     path: terraform-plan-${{ env.ENV }}-${{ env.REGION }}.txt
      - name: Debugging
        run: |
          cat tf.plan

        

  # terraform-apply:
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
  #   needs: terraform-plan
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v3
  #       with:
  #         terraform_version: "1.9.8"

  #     - name: Extract Environment and Region from PR Labels
  #       id: extract-labels
  #       run: |
  #         ENV_LABEL=$(gh pr view ${{ github.event.pull_request.number }} --json labels --jq '.labels[] | select(.name | IN("dev", "sit", "uat", "prd")).name')
  #         REGION_LABEL=$(gh pr view ${{ github.event.pull_request.number }} --json labels --jq '.labels[] | select(.name | IN("eu-west-1", "eu-west-2", "ap-southeast-2")).name')
  #         echo "ENV=$ENV_LABEL" >> $GITHUB_ENV
  #         echo "REGION=$REGION_LABEL" >> $GITHUB_ENV
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ env.REGION }}

  #     - name: Terraform Init
  #       run: make init ENV=${{ env.ENV }} REGION=${{ env.REGION }}

  #     - name: Terraform Apply
  #       run: make apply ENV=${{ env.ENV }} REGION=${{ env.REGION }} ARGS="-auto-approve"